<Window x:Name="Window" x:Class="TelegramBot.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TelegramBot.GUI"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Bot" Height="600" Width="800" AllowsTransparency="True" WindowStyle="None" Background="#00000000" MinWidth="500" MinHeight="400" UseLayoutRounding="True" WindowStartupLocation="CenterScreen" Loaded="window_Loaded" Icon="Resources/Robot.ico" Closing="window_Closing">
    <Window.Resources>
        <local:InverseVisibilityConverter x:Key="InverseVisibilityConverter"/>
        <local:NullToInvisibilityConverter x:Key="NullToInvisibilityConverter"/>
        <local:BoolToInvisibilityConverter x:Key="BooleanToInvisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:ColorToSolidColorBrushValueConverter x:Key="ColorToSolidColorBrushValueConverter"/>
        <local:FontFamilyToStringValueConverter x:Key="FontFamilyToStringValueConverter"/>
        <Style x:Key="RectBorderStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
            <EventSetter Event="UIElement.MouseLeftButtonDown" Handler="Resize_Init"/>
            <EventSetter Event="UIElement.MouseLeftButtonUp" Handler="Resize_End"/>
            <EventSetter Event="UIElement.MouseMove" Handler="Resizeing_Form"/>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="NewTokenOpen"/>
        <CommandBinding Command="ApplicationCommands.Close" Executed="BExit_Click"/>
        <CommandBinding Command="ApplicationCommands.Properties" Executed="BSettings_Click"/>
        <CommandBinding Command="ApplicationCommands.CancelPrint" Executed="NewSpam"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="ApplicationCommands.Properties" Gesture="CTRL+O"/>
        <KeyBinding Command="ApplicationCommands.New" Gesture="CTRL+N"/>
        <KeyBinding Command="ApplicationCommands.CancelPrint" Gesture="CTRL+S"/>
    </Window.InputBindings>
    <Grid>
        <Rectangle x:Name="LeftSizeGrip" Width="8" HorizontalAlignment="Left" Cursor="SizeWE" Style="{StaticResource RectBorderStyle}" Panel.ZIndex="200" />
        <Rectangle x:Name="RightSizeGrip" Width="8" HorizontalAlignment="Right" Cursor="SizeWE" Style="{StaticResource RectBorderStyle}"  Panel.ZIndex="200"/>
        <Rectangle x:Name="TopSizeGrip" Height="8" VerticalAlignment="Top" Cursor="SizeNS" Style="{StaticResource RectBorderStyle}"  Panel.ZIndex="200"/>
        <Rectangle x:Name="BottomSizeGrip" Height="8" VerticalAlignment="Bottom" Cursor="SizeNS" Style="{StaticResource RectBorderStyle}"  Panel.ZIndex="200"/>
        <!--  Corners  -->
        <Rectangle x:Name="TopLeftSizeGrip" Width="8" Height="8" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="SizeNWSE" Style="{StaticResource RectBorderStyle}"  Panel.ZIndex="200"/>
        <Rectangle x:Name="BottomRightSizeGrip" Width="8" Height="8" HorizontalAlignment="Right" VerticalAlignment="Bottom" Cursor="SizeNWSE" Style="{StaticResource RectBorderStyle}"  Panel.ZIndex="200"/>
        <Rectangle x:Name="TopRightSizeGrip" Width="8" Height="8" HorizontalAlignment="Right" VerticalAlignment="Top" Cursor="SizeNESW" Style="{StaticResource RectBorderStyle}" Panel.ZIndex="200" />
        <Rectangle x:Name="BottomLeftSizeGrip" Width="8" Height="8" HorizontalAlignment="Left" VerticalAlignment="Bottom" Cursor="SizeNESW" Style="{StaticResource RectBorderStyle}"  Panel.ZIndex="200"/>
        <Grid x:Name="HeaderGrid" Background="{DynamicResource PrimaryColor}" Height="30" VerticalAlignment="Top" MouseDown="Drag">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <Border Margin="4">
                <Path Data="{StaticResource Robot}" Fill="{DynamicResource TextOnDarkColor}" Stretch="Uniform"/>
            </Border>
            <Button Grid.Column="5" x:Name="BExit" Style="{DynamicResource MenuIconedDanger}" Margin="0,0,0,0" HorizontalAlignment="Stretch" Click="BExit_Click" VerticalAlignment="Stretch">
                <Border Width="16">
                    <Path Data="{StaticResource Exit}" Fill="{DynamicResource TextOnDarkColor}" Stretch="Uniform"/>
                </Border>
            </Button>
            <Button Grid.Column="4" x:Name="BMaximize" Style="{DynamicResource MenuIconed}" Margin="0,0,0,0" HorizontalAlignment="Stretch" Click="BMaximize_Click" VerticalAlignment="Stretch">
                <Border Width="16">
                    <Path Data="{StaticResource Maximize}" Fill="{DynamicResource TextOnDarkColor}" Stretch="Uniform"/>
                </Border>
            </Button>
            <Button Grid.Column="3" x:Name="BMinimize" Style="{DynamicResource MenuIconed}" Margin="0,0,0,0" HorizontalAlignment="Stretch" Click="BMinimize_Click" VerticalAlignment="Stretch">
                <Border Width="16">
                    <Path Data="{StaticResource Minimize}" Fill="{DynamicResource TextOnDarkColor}" Stretch="Uniform"/>
                </Border>
            </Button>
            <Button Grid.Column="2" Style="{DynamicResource MenuIconed}" Margin="0,0,0,0"
                     HorizontalAlignment="Stretch" Click="BAlwaysOnTop_Click" VerticalAlignment="Stretch">
                <Border x:Name="BAlwaysOnTop" Width="18" RenderTransformOrigin="0.5,0.5">
                    <Path Data="{StaticResource DrawingPin}" Fill="{DynamicResource TextOnDarkColor}" Stretch="Uniform"/>
                </Border>
            </Button>
            <Menu Grid.Column="1" HorizontalAlignment="Left" Padding="5" Background="{DynamicResource PrimaryColor}">
                <MenuItem Header="{DynamicResource LangFile}" Style="{DynamicResource PrimaryMenuItem}" SubmenuOpened="OnMenuOpening" SubmenuClosed="OnMenuClosing" Margin="0,0,40,0">
                    <MenuItem Header="Новый токен" InputGestureText="Ctrl+N" Command="New"/>
                    <MenuItem Header="Новая рассылка" InputGestureText="Ctrl+S" Command="CancelPrint"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource LangOptions}" InputGestureText="Ctrl+O" Command="Properties"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource LangExit}" Width="200" Command="Close"/>
                </MenuItem>
                <MenuItem Header="Чаты" Style="{DynamicResource PrimaryMenuItem}" Click="TabChange" Tag="0"/>
                <MenuItem Header="База данных" Style="{DynamicResource PrimaryMenuItem}" Click="TabChange" Tag="1"/>
                <Button x:Name="BMap" Style="{DynamicResource MenuIconed}" Margin="0,0,0,0" Click="BMap_OnClick" VerticalAlignment="Stretch">
                    <Border Margin="2">
                        <Path Data="{StaticResource Map}" Fill="{DynamicResource TextOnDarkColor}" Stretch="Uniform"/>
                    </Border>
                </Button>
            </Menu>

        </Grid>
        <Border  Margin="0,29,0,0" BorderBrush="{DynamicResource PrimaryColor}" BorderThickness="2,0,2,2">
            <Grid x:Name="BodyGrid" Background="{DynamicResource BackgroundColor}" MouseDown="Drag">
                <TabControl x:Name="TabControlMain" BorderThickness="0" TabStripPlacement="Left" Padding="0" Panel.ZIndex="5"  MouseDown="Drag">
                    <TabItem>
                        <Grid Background="{DynamicResource BackgroundColor}" SnapsToDevicePixels="True" UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="235"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Margin="10,60,0,0" BorderBrush="{DynamicResource SecondaryColor}" BorderThickness="0,0,6,0">
                                <ScrollViewer Margin="0,0,0,10" >
                                    <StackPanel x:Name="Chats" Background="{DynamicResource BackgroundColor}"/>
                                </ScrollViewer>
                            </Border>
                            <Button x:Name="BOpenChat" Style="{DynamicResource TranspButton}" Margin="10,10,505,0" Click="BOpenChat_Click" HorizontalAlignment="Stretch" Visibility="{Binding Visibility, ElementName=ChatView}" Panel.ZIndex="5" Grid.Column="1">
                                <Border Width="40">
                                    <Path Data="{StaticResource Chat}" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform"/>
                                </Border>
                            </Button>
                            <Label Grid.Column="0" Content="Чаты" HorizontalAlignment="Left" Margin="10,15,0,0" VerticalAlignment="Top" FontSize="{DynamicResource FontSizeBig}" FontFamily="{DynamicResource FontFamilyHighlight}"/>
                            <CheckBox Grid.Column="0" x:Name="ClientCheckChat" Content="Клиенты" HorizontalAlignment="Left" Margin="63,35,0,0" VerticalAlignment="Top" IsChecked="True" IsEnabled="{Binding IsChecked, ElementName=ManagerCheckChat}"/>
                            <CheckBox Grid.Column="0" x:Name="ManagerCheckChat" Content="Менеджеры" HorizontalAlignment="Left" Margin="63,10,0,0" VerticalAlignment="Top" IsChecked="True" IsEnabled="{Binding IsChecked, ElementName=ClientCheckChat}"/>
                            <Label Content="Необходимо выбрать чат" Margin="0,0,0,0" VerticalAlignment="Center" FontSize="{DynamicResource FontSizeBig}" Grid.Column="1" HorizontalAlignment="Center" Visibility="{Binding Visibility, Converter={StaticResource InverseVisibilityConverter}, ElementName=ChatView}"/>
                            <local:ChatView x:Name="ChatView" Panel.ZIndex="3"  Grid.Column="1"/>

                        </Grid>
                    </TabItem>
                    <TabItem>
                        <Grid Background="{DynamicResource BackgroundColor}" SnapsToDevicePixels="True" UseLayoutRounding="True">
                            <ListBox x:Name="ListTables" HorizontalAlignment="Left" Margin="10,41,0,10" Width="157" SelectionChanged="ListTables_SelectionChanged"/>
                            <Label Content="Таблицы" HorizontalAlignment="Left" Margin="10,7,0,0" VerticalAlignment="Top" FontFamily="{DynamicResource FontFamilyHighlight}" FontSize="{DynamicResource FontSizeBig}"/>
                            <Label Content="{Binding SelectedItem, ElementName=ListTables}" HorizontalAlignment="Center" Margin="80,30,0,0" VerticalAlignment="Top" FontFamily="{DynamicResource FontFamilyHighlight}" FontSize="{DynamicResource FontSizeBig}" Foreground="{DynamicResource SecondaryColor}"/>
                            <DataGrid x:Name="DBTable" Height="491" Margin="172,55,10,0" VerticalAlignment="Top" Background="{DynamicResource AlternativeBackgroundColor}" FrozenColumnCount="1"/>
                            <Button x:Name="Refresh" Width="40" Style="{DynamicResource TranspButton}" Margin="0,7,10,0" VerticalAlignment="Top" Height="40" HorizontalAlignment="Right" Click="Refresh_OnClick">
                                <Border>
                                    <Path Data="{StaticResource Refresh}" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform"/>
                                </Border>
                            </Button>
                            <Label Content="Обновить таблицу" HorizontalAlignment="Right" Margin="0,18,55,0" VerticalAlignment="Top"/>
                        </Grid>
                    </TabItem>

                </TabControl>
            </Grid>
        </Border>
        <Popup x:Name="PopSettings" PopupAnimation="Fade" Width="400" IsOpen="False" SnapsToDevicePixels="True" Panel.ZIndex="100" Placement="Left" StaysOpen="False" Height="{Binding ActualHeight, ElementName=Window, Mode=OneWay}" HorizontalOffset="{Binding Width, Mode=OneWay, RelativeSource={RelativeSource Self}}" Closed="OnMenuClosing" Opened="OnMenuOpening">
            <Popup.Effect>
                <DropShadowEffect ShadowDepth="2" BlurRadius="4" Color="{DynamicResource ShadowColor}"/>
            </Popup.Effect>
            <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryColor}">
                <Grid Background="{DynamicResource PrimaryColor}">
                    <TabControl BorderThickness="0" TabStripPlacement="Right" Padding="0">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabPanel}">
                                <Setter Property="Margin" Value="0,10,0,0" />
                            </Style>
                        </TabControl.Resources>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource Robot}" Height="30" Width="30" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform" Margin="5,3,5,3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock Text="Bot Settings" FontSize="{DynamicResource FontSizeBig}" FontFamily="{DynamicResource FontFamilyHighlight}"  Margin="5,7,22,7"/>
                                </StackPanel>
                            </TabItem.Header>
                            <Grid Background="{DynamicResource AlternativeBackgroundColor}">
                                <TextBox Height="39" Margin="10,36,10,0" Text="{Binding APIKey, Mode=TwoWay, Source={x:Static local:BotSettings.Current}}" VerticalAlignment="Top"/>
                                <TextBox Height="72" Margin="10,104,10,0" Text="{Binding ConnectionString, Mode=TwoWay, Source={x:Static local:BotSettings.Current}}" VerticalAlignment="Top"/>
                                <Label Content="API Key" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                                <Label Content="Connection string" HorizontalAlignment="Left" Margin="10,75,0,0" VerticalAlignment="Top" FontFamily="{DynamicResource FontFamilyHighlight}"/>
                                <StackPanel x:Name="AvailableCommandsPanel" Margin="10,181,10,56"/>
                                <Button Content="Установить настройки" HorizontalAlignment="Left" Margin="10,0,0,10" VerticalAlignment="Bottom" Width="150" Height="41" Click="SetBotSettings_Click" ToolTip="Настройки будут применены после перезапуска бота."/>

                                <Button Width="24" Style="{DynamicResource TranspButton}" Margin="0,2,2,0" Height="30" HorizontalAlignment="Right" Click="PopupClose_OnClick" Panel.ZIndex="10">
                                    <Border>
                                        <Path Data="{StaticResource Exit}" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform"/>
                                    </Border>
                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource Style}" Height="30" Width="30" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform" Margin="5,3,5,3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock Text="{DynamicResource LangSyles}" FontSize="{DynamicResource FontSizeBig}" FontFamily="{DynamicResource FontFamilyHighlight}"  Margin="5,7,22,7"/>
                                </StackPanel>
                            </TabItem.Header>
                            <Grid Background="{DynamicResource AlternativeBackgroundColor}">
                                <ListBox x:Name="ThemeBox" Margin="10,40,0,10" HorizontalAlignment="Left" DataContext="{Binding}" Width="200" BorderThickness="0"/>
                                <Label Content="{DynamicResource LangSyles}" HorizontalAlignment="Left" Margin="81,6,0,0" VerticalAlignment="Top" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="{DynamicResource FontFamilyHighlight}" FontSize="{DynamicResource FontSizeBig}"/>
                                <ScrollViewer Margin="220,40,10,40" >
                                    <Grid x:Name="CustomThemePicker" Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>
                                        <xctk:ColorPicker Grid.Column="1" Grid.Row="0" SelectedColor="{Binding CustomTheme.PrimaryColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" UsingAlphaChannel="False"/>
                                        <Label Grid.Column="0" Grid.Row="0"  Content="{DynamicResource LangPrimarycolor}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:ColorPicker Grid.Column="1" Grid.Row="1" SelectedColor="{Binding CustomTheme.SecondaryColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" UsingAlphaChannel="False"/>
                                        <Label Content="{DynamicResource LangSecondarycolor}"  Grid.Column="0" Grid.Row="1" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:ColorPicker Grid.Column="1" Grid.Row="2" SelectedColor="{Binding CustomTheme.BackgroundColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" UsingAlphaChannel="False"/>
                                        <Label Grid.Column="0" Grid.Row="2" Content="{DynamicResource LangBackground}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:ColorPicker Grid.Column="1" Grid.Row="3" SelectedColor="{Binding CustomTheme.AlternativeBackgroundColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" UsingAlphaChannel="False"/>
                                        <Label Grid.Column="0" Grid.Row="3" Content="{DynamicResource LangAlternativebackground}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:ColorPicker Grid.Column="1" Grid.Row="4" SelectedColor="{Binding CustomTheme.TextOnDarkColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" UsingAlphaChannel="False"/>
                                        <Label Grid.Column="0" Grid.Row="4" Content="{DynamicResource LangTextondark}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:ColorPicker Grid.Column="1" Grid.Row="5" SelectedColor="{Binding CustomTheme.TextOnLightColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" UsingAlphaChannel="False"/>
                                        <Label Grid.Column="0" Grid.Row="5" Content="{DynamicResource LangTextonlight}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:ColorPicker Grid.Column="1" Grid.Row="6" SelectedColor="{Binding CustomTheme.ShadowColor, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" UsingAlphaChannel="False"/>
                                        <Label Grid.Column="0" Grid.Row="6" Content="{DynamicResource LangShadow}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:DoubleUpDown Grid.Column="1" Grid.Row="7" Value="{Binding CustomTheme.FontSizeBig, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" BorderBrush="{DynamicResource PrimaryColor}" Foreground="{DynamicResource TextOnLightColor}" Background="{DynamicResource AlternativeBackgroundColor}" ShowButtonSpinner="False" Maximum="24" Minimum="4"/>
                                        <Label Grid.Column="0" Grid.Row="7" Content="{DynamicResource LangFontBig}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:DoubleUpDown Grid.Column="1" Grid.Row="8" Value="{Binding CustomTheme.FontSizeNormal, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" BorderBrush="{DynamicResource PrimaryColor}" Foreground="{DynamicResource TextOnLightColor}" Background="{DynamicResource AlternativeBackgroundColor}" ShowButtonSpinner="False" Maximum="24" Minimum="4"/>
                                        <Label Grid.Column="0" Grid.Row="8" Content="{DynamicResource LangFontNormal}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <xctk:DoubleUpDown Grid.Column="1" Grid.Row="9" Value="{Binding CustomTheme.FontSizeSmall, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" BorderBrush="{DynamicResource PrimaryColor}" Foreground="{DynamicResource TextOnLightColor}" Background="{DynamicResource AlternativeBackgroundColor}" ShowButtonSpinner="False" Maximum="24" Minimum="4"/>
                                        <Label Grid.Column="0" Grid.Row="9"  Content="{DynamicResource LangFontSmall}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <ComboBox Grid.Column="1" Grid.Row="10" SelectedItem="{Binding CustomTheme.FontFamilyMain, Converter={StaticResource FontFamilyToStringValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" BorderBrush="{DynamicResource PrimaryColor}" Foreground="{DynamicResource TextOnDarkColor}" Background="{DynamicResource AlternativeBackgroundColor}" ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}"/>
                                        <Label Grid.Column="0" Grid.Row="10"  Content="{DynamicResource LangFontMain}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <ComboBox Grid.Column="1" Grid.Row="11" SelectedItem="{Binding CustomTheme.FontFamilyHighlight, Converter={StaticResource FontFamilyToStringValueConverter}, Mode=TwoWay, Source={x:Static local:Settings.Current}}" VerticalAlignment="Center" BorderBrush="{DynamicResource PrimaryColor}" Foreground="{DynamicResource TextOnDarkColor}" Background="{DynamicResource AlternativeBackgroundColor}" ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}"/>
                                        <Label Grid.Column="0" Grid.Row="11"  Content="{DynamicResource LangFontHighlight}" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    </Grid>
                                </ScrollViewer>
                                <Button Width="24" Style="{DynamicResource TranspButton}" Margin="0,2,2,0" Height="30" HorizontalAlignment="Right" Click="PopupClose_OnClick" Panel.ZIndex="10">
                                    <Border>
                                        <Path Data="{StaticResource Exit}" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform"/>
                                    </Border>
                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource Languages}" Height="30" Width="30" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform" Margin="5,3,5,3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock Text="{DynamicResource LangLanguages}" FontSize="{DynamicResource FontSizeBig}" FontFamily="{DynamicResource FontFamilyHighlight}"  Margin="5,7,22,7"/>
                                </StackPanel>
                            </TabItem.Header>
                            <Grid Background="{DynamicResource AlternativeBackgroundColor}">
                                <ListBox x:Name="LangBox" Margin="0,40,0,20" HorizontalAlignment="Center" Width="200" DataContext="{Binding}" BorderThickness="0"/>
                                <Label Content="{DynamicResource LangLanguages}" HorizontalAlignment="Left" Margin="83,6,0,0" VerticalAlignment="Top" Foreground="{DynamicResource TextOnLightColor}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="{DynamicResource FontFamilyHighlight}" FontSize="{DynamicResource FontSizeBig}"/>
                                <Button Width="24" Style="{DynamicResource TranspButton}" Margin="0,2,2,0" Height="30" HorizontalAlignment="Right" Click="PopupClose_OnClick" Panel.ZIndex="10">
                                    <Border>
                                        <Path Data="{StaticResource Exit}" Fill="{DynamicResource SecondaryColor}" Stretch="Uniform"/>
                                    </Border>
                                </Button>
                            </Grid>
                        </TabItem>
                    </TabControl>

                </Grid>
            </Border>
        </Popup>
        <Popup x:Name="GenerateTokenView" PopupAnimation="Fade" Width="400" IsOpen="False" SnapsToDevicePixels="True" Panel.ZIndex="100" Placement="Center" StaysOpen="False" Height="300" Closed="OnMenuClosing" Opened="OnMenuOpening">
            <Popup.Effect>
                <DropShadowEffect ShadowDepth="2" BlurRadius="4" Color="{DynamicResource ShadowColor}"/>
            </Popup.Effect>
            <Border BorderThickness="2" BorderBrush="{DynamicResource PrimaryColor}">
                <Grid Background="{DynamicResource BackgroundColor}">
                    <ListBox x:Name="ManagersList" HorizontalAlignment="Left" Width="144" SelectionChanged="ManagersList_SelectionChanged" BorderThickness="0" Background="Transparent"/>
                    <Button x:Name="GenerateToken" Content="Сгенерировать токен" HorizontalAlignment="Left" Margin="206,89,0,0" VerticalAlignment="Top" Width="154" Height="41" Click="GenerateToken_Click"/>
                    <TextBox x:Name="TokenText" Height="23" Margin="206,16,10,0" Text="" VerticalAlignment="Top" IsReadOnly="True"/>
                    <Label Content="Токен" HorizontalAlignment="Left" Margin="149,10,0,0" VerticalAlignment="Top" FontFamily="{DynamicResource FontFamilyHighlight}" FontSize="{DynamicResource FontSizeBig}"/>
                    <Popup x:Name="IsClipboarded" IsOpen="False" Panel.ZIndex="101" Placement="Mouse" StaysOpen="False" AllowsTransparency="True">
                        <TextBlock Text="Токен был добавлен в буфер обмена" Background="Transparent" Foreground="{DynamicResource TextOnLightColor}" FontSize="{DynamicResource FontSizeBig}" FontFamily="{DynamicResource FontFamilyHighlight}">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="11"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </Popup>

                </Grid>
            </Border>
        </Popup>
        <Popup x:Name="SendSpam" PopupAnimation="Fade" Width="400" IsOpen="False" SnapsToDevicePixels="True" Panel.ZIndex="100" Placement="Center" StaysOpen="False" Height="300" Closed="OnMenuClosing" Opened="OnMenuOpening">
            <Border BorderBrush="{DynamicResource PrimaryColor}" BorderThickness="2">
                <Grid Background="{DynamicResource BackgroundColor}">
                    <Button x:Name="SendAllManagers" Content="Отправить" HorizontalAlignment="Right" Margin="0,40,10,0" VerticalAlignment="Top" Width="96" Height="34" Click="SendAllManagers_Click"/>
                    <Border Margin="20,100,20,20" Background="{DynamicResource AlternativeBackgroundColor}" BorderBrush="{DynamicResource PrimaryColor}" BorderThickness="1">
                        <TextBox x:Name="TextMessage" Text="" VerticalContentAlignment="Bottom" AcceptsReturn="True" AcceptsTab="True" SpellCheck.IsEnabled="True"/>
                    </Border>

                    <Label Content="Отправить сообщение" VerticalAlignment="Top" FontFamily="{DynamicResource FontFamilyHighlight}" FontSize="{DynamicResource FontSizeBig}"/>
                    <CheckBox x:Name="CheckManager" Content="Мeнеджерам" HorizontalAlignment="Left" Margin="7,29,0,0" VerticalAlignment="Top" IsEnabled="{Binding IsChecked, ElementName=CheckClient}" IsChecked="True"/>
                    <CheckBox x:Name="CheckClient" Content="Клиентам" HorizontalAlignment="Left" Margin="7,54,0,0" VerticalAlignment="Top" IsEnabled="{Binding IsChecked, ElementName=CheckManager}"/>
                </Grid>
            </Border>
        </Popup>

    </Grid>
</Window>
